input ExamplesBarFilters {
  OR: [ExamplesBarfiltersOr!]
  eq: String
  gt: String
  gte: String
  ilike: String

  """
  Array<undefined>
  """
  inArray: [String!]
  isNotNull: Boolean
  isNull: Boolean
  like: String
  lt: String
  lte: String
  ne: String
  notIlike: String

  """
  Array<undefined>
  """
  notInArray: [String!]
  notLike: String
}

input ExamplesBarfiltersOr {
  eq: String
  gt: String
  gte: String
  ilike: String

  """
  Array<undefined>
  """
  inArray: [String!]
  isNotNull: Boolean
  isNull: Boolean
  like: String
  lt: String
  lte: String
  ne: String
  notIlike: String

  """
  Array<undefined>
  """
  notInArray: [String!]
  notLike: String
}

input ExamplesBazFilters {
  OR: [ExamplesBazfiltersOr!]
  eq: Int
  gt: Int
  gte: Int
  ilike: String

  """
  Array<undefined>
  """
  inArray: [Int!]
  isNotNull: Boolean
  isNull: Boolean
  like: String
  lt: Int
  lte: Int
  ne: Int
  notIlike: String

  """
  Array<undefined>
  """
  notInArray: [Int!]
  notLike: String
}

input ExamplesBazfiltersOr {
  eq: Int
  gt: Int
  gte: Int
  ilike: String

  """
  Array<undefined>
  """
  inArray: [Int!]
  isNotNull: Boolean
  isNull: Boolean
  like: String
  lt: Int
  lte: Int
  ne: Int
  notIlike: String

  """
  Array<undefined>
  """
  notInArray: [Int!]
  notLike: String
}

input ExamplesCreatedAtFilters {
  OR: [ExamplesCreatedAtfiltersOr!]

  """
  Date
  """
  eq: String

  """
  Date
  """
  gt: String

  """
  Date
  """
  gte: String
  ilike: String

  """
  Array<Date>
  """
  inArray: [String!]
  isNotNull: Boolean
  isNull: Boolean
  like: String

  """
  Date
  """
  lt: String

  """
  Date
  """
  lte: String

  """
  Date
  """
  ne: String
  notIlike: String

  """
  Array<Date>
  """
  notInArray: [String!]
  notLike: String
}

input ExamplesCreatedAtfiltersOr {
  """
  Date
  """
  eq: String

  """
  Date
  """
  gt: String

  """
  Date
  """
  gte: String
  ilike: String

  """
  Array<Date>
  """
  inArray: [String!]
  isNotNull: Boolean
  isNull: Boolean
  like: String

  """
  Date
  """
  lt: String

  """
  Date
  """
  lte: String

  """
  Date
  """
  ne: String
  notIlike: String

  """
  Array<Date>
  """
  notInArray: [String!]
  notLike: String
}

input ExamplesFilters {
  OR: [ExamplesFiltersOr!]
  bar: ExamplesBarFilters
  baz: ExamplesBazFilters
  createdAt: ExamplesCreatedAtFilters
  foo: ExamplesFooFilters
  id: ExamplesIdFilters
  updatedAt: ExamplesUpdatedAtFilters
}

input ExamplesFiltersOr {
  bar: ExamplesBarFilters
  baz: ExamplesBazFilters
  createdAt: ExamplesCreatedAtFilters
  foo: ExamplesFooFilters
  id: ExamplesIdFilters
  updatedAt: ExamplesUpdatedAtFilters
}

input ExamplesFooFilters {
  OR: [ExamplesFoofiltersOr!]
  eq: String
  gt: String
  gte: String
  ilike: String

  """
  Array<undefined>
  """
  inArray: [String!]
  isNotNull: Boolean
  isNull: Boolean
  like: String
  lt: String
  lte: String
  ne: String
  notIlike: String

  """
  Array<undefined>
  """
  notInArray: [String!]
  notLike: String
}

input ExamplesFoofiltersOr {
  eq: String
  gt: String
  gte: String
  ilike: String

  """
  Array<undefined>
  """
  inArray: [String!]
  isNotNull: Boolean
  isNull: Boolean
  like: String
  lt: String
  lte: String
  ne: String
  notIlike: String

  """
  Array<undefined>
  """
  notInArray: [String!]
  notLike: String
}

input ExamplesIdFilters {
  OR: [ExamplesIdfiltersOr!]
  eq: String
  gt: String
  gte: String
  ilike: String

  """
  Array<undefined>
  """
  inArray: [String!]
  isNotNull: Boolean
  isNull: Boolean
  like: String
  lt: String
  lte: String
  ne: String
  notIlike: String

  """
  Array<undefined>
  """
  notInArray: [String!]
  notLike: String
}

input ExamplesIdfiltersOr {
  eq: String
  gt: String
  gte: String
  ilike: String

  """
  Array<undefined>
  """
  inArray: [String!]
  isNotNull: Boolean
  isNull: Boolean
  like: String
  lt: String
  lte: String
  ne: String
  notIlike: String

  """
  Array<undefined>
  """
  notInArray: [String!]
  notLike: String
}

input ExamplesInsertInput {
  bar: String!
  baz: Int

  """
  Date
  """
  createdAt: String
  foo: String!
  id: String

  """
  Date
  """
  updatedAt: String
}

type ExamplesItem {
  bar: String!
  baz: Int

  """
  Date
  """
  createdAt: String
  foo: String!
  id: String!

  """
  Date
  """
  updatedAt: String
}

input ExamplesOrderBy {
  bar: InnerOrder
  baz: InnerOrder
  createdAt: InnerOrder
  foo: InnerOrder
  id: InnerOrder
  updatedAt: InnerOrder
}

type ExamplesSelectItem {
  bar: String!
  baz: Int

  """
  Date
  """
  createdAt: String
  foo: String!
  id: String!

  """
  Date
  """
  updatedAt: String
}

input ExamplesUpdateInput {
  bar: String
  baz: Int

  """
  Date
  """
  createdAt: String
  foo: String
  id: String

  """
  Date
  """
  updatedAt: String
}

input ExamplesUpdatedAtFilters {
  OR: [ExamplesUpdatedAtfiltersOr!]

  """
  Date
  """
  eq: String

  """
  Date
  """
  gt: String

  """
  Date
  """
  gte: String
  ilike: String

  """
  Array<Date>
  """
  inArray: [String!]
  isNotNull: Boolean
  isNull: Boolean
  like: String

  """
  Date
  """
  lt: String

  """
  Date
  """
  lte: String

  """
  Date
  """
  ne: String
  notIlike: String

  """
  Array<Date>
  """
  notInArray: [String!]
  notLike: String
}

input ExamplesUpdatedAtfiltersOr {
  """
  Date
  """
  eq: String

  """
  Date
  """
  gt: String

  """
  Date
  """
  gte: String
  ilike: String

  """
  Array<Date>
  """
  inArray: [String!]
  isNotNull: Boolean
  isNull: Boolean
  like: String

  """
  Date
  """
  lt: String

  """
  Date
  """
  lte: String

  """
  Date
  """
  ne: String
  notIlike: String

  """
  Array<Date>
  """
  notInArray: [String!]
  notLike: String
}

input InnerOrder {
  direction: OrderDirection!

  """
  Priority of current field
  """
  priority: Int!
}

type Mutation {
  deleteFromExamples(where: ExamplesFilters): [ExamplesItem!]!
  insertIntoExamples(values: [ExamplesInsertInput!]!): [ExamplesItem!]!
  insertIntoExamplesSingle(values: ExamplesInsertInput!): ExamplesItem
  updateExamples(set: ExamplesUpdateInput!, where: ExamplesFilters): [ExamplesItem!]!
}

"""
Order by direction
"""
enum OrderDirection {
  """
  Ascending order
  """
  asc

  """
  Descending order
  """
  desc
}

type Query {
  example(offset: Int, orderBy: ExamplesOrderBy, where: ExamplesFilters): ExamplesSelectItem
  examples(limit: Int, offset: Int, orderBy: ExamplesOrderBy, where: ExamplesFilters): [ExamplesSelectItem!]!
}
